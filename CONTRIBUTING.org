#+TITLE: Contributing to Unit Planner

* Getting set to develop UnitPlanner v7
The following steps should be all you need to get a working development environment for UnitPlanner:

1. Configure VS Code
   1. Install the [[https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers][Remote - Containers]] extension (extension ID ~ms-vscode-remote.remote-containers~)
   2. Reopen the repository using the Remote Containers extension. There should be a prompt asking to do so
   3. Wait for the terminal in the bottom window to say "Press any key to close this terminal"
2. Configure Kubernetes
   1. Create a new terminal, and run ~scripts/dev-create-resources.sh -a~
3. Configure F#
   1. Bring up the command pallette (~Ctrl-Shift-P~ or ~Cmd-Shift-P~)
   2. Run ~F#: Change workspace or solution~
   3. Select ~/workspaces/UnitPlannerv7~

** Developing



* Application architecture
** Apis
*** [[./Apis/Main/README.org][Main]]
** [[./Client/README.org][Client]]
** Common
*** [[./Common/Authentication/README.org][Authentication]]
** Services
*** [[./Services/Authentication/README.org][Authentication]]
*** [[./Services/Capwatch/README.org][Capwatch]]
*** [[./Services/Files/README.org][Files]]
*** [[./Services/Graph/README.org][Graph]]
*** [[./Services/HostConfiguration/README.org][Host Configuration]]

* Testing
** Unit tests
Unit tests can be run with either ~dotnet test~, either in the project root or in the individual .NET project folders

** TODO Integration tests
*TODO: Fix after reimplementing configuration to use Kubernetes*

There are three main integration test suites, for two main different pages and the elm reactor. There are also two different ways to run each test suite, either with a GUI (if developing on Linux) or from the command line.

To run an integration test suite from the command line, run ~docker-compose run cypress_tests_[SUITE_NAME]~, where ~[SUITE_NAME]~ is one of ~client~, ~webmaster_dashboard~, or ~reactor~.

To run the GUI, run ~docker-compose up -d cypress_test_runner_[SUITE_NAME]_linux~ with the same ~[SUITE_NAME]~ options as above.

** Pull request
Pull requests must have appropriate tests written to cover any new code
