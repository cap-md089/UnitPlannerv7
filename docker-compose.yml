# docker-compose.yml: Used to define how a development environment works and is set up
#
# Copyright (C) 2021 Andrew Rioux
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

version: "3.8"
services:
  # Development services
  client_proxy:
    build:
      context: .
      target: development-proxy
      dockerfile: Client/Dockerfile
    environment:
      - PROXY_NAME=*.localunitplanner.org
      - PROXY_PORT=80
      - API_SERVER_URL=http://api_server:5000
      - ELM_REACTOR_URL=http://client_live:8000
      - E2E_TEST_SEED_SERVICE=http://integration_tests_seed_service:4090
    volumes:
      - ./Client/static:/var/www/html/static
      - ./Client/nginx:/etc/nginx/extra-conf
    ports:
      - "80:80"
    depends_on:
      - client_live
      - api_server
      - integration_tests_seed_service
    networks:
      - dev_network

  webmaster_dashboard_proxy:
    build:
      context: .
      target: development-proxy
      dockerfile: Client/Dockerfile
    environment:
      - PROXY_NAME=*.localunitplanner.org
      - PROXY_PORT=80
      - API_SERVER_URL=http://api_server:5000
      - ELM_REACTOR_URL=http://webmaster_dashboard_live:8000
      - E2E_TEST_SEED_SERVICE=http://integration_tests_seed_service:4090
    volumes:
      - ./Client/static:/var/www/html/static
      - ./Client/nginx:/etc/nginx/extra-conf
    ports:
      - "3000:80"
    depends_on:
      - webmaster_dashboard_live
      - api_server
      - integration_tests_seed_service
    networks:
      - dev_network

  reactor_proxy:
    build:
      context: .
      target: development-proxy
      dockerfile: Client/Dockerfile
    environment:
      - PROXY_NAME=*.localunitplanner.org
      - PROXY_PORT=80
      - API_SERVER_URL=http://api_server:5000
      - ELM_REACTOR_URL=http://client_reactor:8000
      - E2E_TEST_SEED_SERVICE=http://integration_tests_seed_service:4090
    volumes:
      - ./Client/static:/var/www/html/static
      - ./Client/nginx:/etc/nginx/extra-conf
    ports:
      - "2999:80"
    depends_on:
      - client_reactor
      - api_server
      - integration_tests_seed_service
    networks:
      - dev_network

  client_live:
    build:
      context: .
      target: base
      dockerfile: Client/Dockerfile
    working_dir: /app
    expose:
      - "8000"
    ports:
      - "8000:8000"
    volumes:
      - ./Client:/app
    command: src/Main.elm --host=0.0.0.0 --pushstate -- --debug
    networks:
      - dev_network
    user: "1000"

  webmaster_dashboard_live:
    build:
      context: .
      target: base
      dockerfile: Client/Dockerfile
    working_dir: /app
    expose:
      - "8000"
    ports:
      - "8001:8000"
    volumes:
      - ./Client:/app
    command: src/WebmasterDashboard.elm --host=0.0.0.0 --pushstate -- --debug
    networks:
      - dev_network
    user: "1000"

  client_reactor:
    build:
      context: .
      target: base
      dockerfile: Client/Dockerfile
    working_dir: /app
    expose:
      - "8000"
    ports:
      - "7999:8000"
    volumes:
      - ./Client:/app
    entrypoint: /usr/bin/elm
    command: reactor --port=8000
    networks:
      - dev_network
    user: "1000"

  api_server:
    build:
      context: .
      dockerfile: Apis/Main/Dockerfile.dev
    ports:
      - "5000:5000"
    expose:
      - "5000"
    depends_on:
      - db
    volumes:
      - .:/app
      - '~:/home'
      - /etc/hosts:/etc/hosts
    working_dir: /app
    environment:
      - ASPNETCORE_URLS=http://0.0.0.0:5000
      - ASPNETCORE_ENVIRONMENT=Development
      - SERVICE_AUTH_URL=http://authentication_dev:5010
      - SERVICE_CAPWATCH_URL=http://capwatch_dev:5020
      - SERVICE_FILES_URL=http://files_dev:5030
      - SERVICE_GRAPH_URL=http://graph_dev:5040
      - SERVICE_HOSTCONFIGURATION_URL=http://hosts_dev:5050
      - HOME=/home
    command: dotnet watch --project Apis/Main/UnitPlanner.Apis.Main.csproj run -c Release < echo 'a'
    networks:
      - dev_network
    user: "1000"

  authentication_dev:
    image: mcr.microsoft.com/dotnet/sdk:6.0
    expose:
      - "5010"
    depends_on:
      - db
    volumes:
      - .:/app
      - '~:/home'
    working_dir: /app
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - HOME=/home
    command: dotnet watch --project Services/Authentication/UnitPlanner.Services.Authentication.csproj run -c Release < echo 'a'
    networks:
      - dev_network
    user: "1000"

  capwatch_dev:
    image: mcr.microsoft.com/dotnet/sdk:6.0
    expose:
      - "5020"
    depends_on:
      - db
    volumes:
      - .:/app
      - '~:/home'
    working_dir: /app
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - HOME=/home
    command: dotnet watch --project Services/Capwatch/UnitPlanner.Services.Capwatch.csproj run -c Release < echo 'a'
    networks:
      - dev_network
    user: "1000"

  files_dev:
    image: mcr.microsoft.com/dotnet/sdk:6.0
    expose:
      - "5030"
    depends_on:
      - db
    volumes:
      - .:/app
      - '~:/home'
    working_dir: /app
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - HOME=/home
    command: dotnet watch --project Services/Files/UnitPlanner.Services.Files.csproj run -c Release < echo 'a'
    networks:
      - dev_network
    user: "1000"

  graph_dev:
    image: mcr.microsoft.com/dotnet/sdk:6.0
    expose:
      - "5040"
    depends_on:
      - db
    volumes:
      - .:/app
      - '~:/home'
    working_dir: /app
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - HOME=/home
    command: dotnet watch --project Services/Graph/UnitPlanner.Services.Graph.csproj run -c Release < echo 'a'
    networks:
      - dev_network
    user: "1000"

  hosts_dev:
    image: mcr.microsoft.com/dotnet/sdk:6.0
    expose:
      - "5050"
    depends_on:
      - db
    volumes:
      - .:/app
      - '~:/home'
    working_dir: /app
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - HOME=/home
    command: dotnet watch --project Services/HostConfiguration/UnitPlanner.Services.HostConfiguration.csproj run -c Release < echo 'a'
    networks:
      - dev_network
    user: "1000"

  db:
    image: mysql:8.0.26
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=toor
      - MYSQL_DATABASE=UnitPlannerv7
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - dev_network

  dbsh:
    image: mysql:8.0.26
    entrypoint: mysql
    command: --user=root --password=toor --host=db
    networks:
      - dev_network
  
  dev_shell:
    build: .
    working_dir: /app
    volumes:
      - .:/app
      - '~:/home/host_dev'
    environment:
      - HOME=/home/host_dev
    networks:
      - dev_network
    user: "1000"
    
  # Test services
  watch_client_unit_tests:
    build:
      context: .
      target: base
      dockerfile: Client/Dockerfile
    working_dir: /app
    volumes:
      - ./Client:/app
    entrypoint: /usr/local/bin/elm-test
    command: --watch
    user: "1000"
    environment:
      - HOME=/tmp/home

  watch_api_server_unit_tests:
    image: mcr.microsoft.com/dotnet/sdk:6.0
    volumes:
      - .:/app
    working_dir: /app
    command: dotnet watch test --project Apis/Main.Tests/UnitPlanner.Apis.Main.Tests.csproj
    user: "1000"
    environment:
      - HOME=/tmp/home

  watch_auth_service_unit_tests:
    image: mcr.microsoft.com/dotnet/sdk:6.0
    volumes:
      - .:/app
    working_dir: /app
    command: dotnet watch test --project Services/Tests/Authentication.Tests/UnitPlanner.Services.Authentication.Tests.csproj
    user: "1000"
    environment:
      - HOME=/tmp/home

  watch_capwatch_service_unit_tests:
    image: mcr.microsoft.com/dotnet/sdk:6.0
    volumes:
      - .:/app
    working_dir: /app
    command: dotnet watch test --project Services/Tests/Capwatch.Tests/UnitPlanner.Services.Capwatch.Tests.csproj
    user: "1000"
    environment:
      - HOME=/tmp/home

  watch_files_service_unit_tests:
    image: mcr.microsoft.com/dotnet/sdk:6.0
    volumes:
      - .:/app
    working_dir: /app
    command: dotnet watch test --project Services/Tests/Files.Tests/UnitPlanner.Services.Files.Tests.csproj
    user: "1000"
    environment:
      - HOME=/tmp/home

  watch_graph_service_unit_tests:
    image: mcr.microsoft.com/dotnet/sdk:6.0
    volumes:
      - .:/app
    working_dir: /app
    command: dotnet watch test --project Services/Tests/Graph.Tests/UnitPlanner.Services.Graph.Tests.csproj
    user: "1000"
    environment:
      - HOME=/tmp/home

  # Integration/end to end test services
  integration_tests_seed_service:
    image: mcr.microsoft.com/dotnet/sdk:6.0
    expose:
      - "4090"
    depends_on:
      - db
    volumes:
      - .:/app
    working_dir: /app
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - HOME=/tmp/home
    command: dotnet run --project Apis/Main.IntegrationTests/UnitPlanner.Apis.Main.IntegrationTests.csproj < echo 'a'
    networks:
      - dev_network
    user: "1000"

  cypress_tests_client:
    image: cypress/included:9.2.0
    volumes:
      - .:/e2e
    working_dir: /e2e
    environment:
      - CYPRESS_BASE_URL=http://client_proxy
    networks:
      - dev_network
    depends_on:
      - client_proxy
      - integration_tests_seed_service
    user: "1000"
    command: --spec cypress/integration/main/*.spec.js

  cypress_tests_webmaster_dashboard:
    image: cypress/included:9.2.0
    volumes:
      - .:/e2e
    working_dir: /e2e
    environment:
      - CYPRESS_BASE_URL=http://webmaster_dashboard_proxy
    networks:
      - dev_network
    depends_on:
      - webmaster_dashboard_proxy
      - integration_tests_seed_service
    user: "1000"
    command: --spec cypress/integration/webmaster_dashboard/*.spec.js

  cypress_tests_reactor:
    image: cypress/included:9.2.0
    volumes:
      - .:/e2e
    working_dir: /e2e
    environment:
      - CYPRESS_BASE_URL=http://reactor_proxy
    networks:
      - dev_network
    depends_on:
      - client_proxy
      - integration_tests_seed_service
    user: "1000"
    command: --spec cypress/integration/reactor/*.spec.js

  cypress_test_runner_client_linux:
    image: cypress/included:9.2.0
    volumes:
      - .:/e2e
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ~/.Xauthority:/home/node/.Xauthority:ro
    working_dir: /e2e
    environment:
      - CYPRESS_BASE_URL=http://client_proxy
      - DISPLAY=:0
      - XAUTHORITY=/home/node/.Xauthority
    entrypoint: cypress
    command: open --project .
    user: "1000"
    networks:
      - dev_network
    depends_on:
      - client_proxy
      - integration_tests_seed_service

  cypress_test_runner_webmaster_dashboard_linux:
    image: cypress/included:9.2.0
    volumes:
      - .:/e2e
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ~/.Xauthority:/home/node/.Xauthority:ro
    working_dir: /e2e
    environment:
      - CYPRESS_BASE_URL=http://webmaster_dashboard_proxy
      - DISPLAY=:0
      - XAUTHORITY=/home/node/.Xauthority
    entrypoint: cypress
    command: open --project .
    user: "1000"
    networks:
      - dev_network
    depends_on:
      - webmaster_dashboard_proxy
      - integration_tests_seed_service

  cypress_test_runner_reactor_linux:
    image: cypress/included:9.2.0
    volumes:
      - .:/e2e
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ~/.Xauthority:/home/node/.Xauthority:ro
    working_dir: /e2e
    environment:
      - CYPRESS_BASE_URL=http://reactor_proxy
      - DISPLAY=:0
      - XAUTHORITY=/home/node/.Xauthority
    entrypoint: cypress
    command: open --project .
    user: "1000"
    networks:
      - dev_network
    depends_on:
      - reactor_proxy
      - integration_tests_seed_service

volumes:
  db-data:
    driver: local

networks:
  dev_network:
    driver: bridge
